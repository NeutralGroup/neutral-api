// Code generated by protoc-gen-go. DO NOT EDIT.
// source: quotes.proto

package neutralservice

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SubscribeRequest struct {
	Instrument           *InstrumentID `protobuf:"bytes,1,opt,name=instrument,proto3" json:"instrument,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SubscribeRequest) Reset()         { *m = SubscribeRequest{} }
func (m *SubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeRequest) ProtoMessage()    {}
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa8c397fe3f70398, []int{0}
}

func (m *SubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeRequest.Unmarshal(m, b)
}
func (m *SubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeRequest.Merge(m, src)
}
func (m *SubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeRequest.Size(m)
}
func (m *SubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeRequest proto.InternalMessageInfo

func (m *SubscribeRequest) GetInstrument() *InstrumentID {
	if m != nil {
		return m.Instrument
	}
	return nil
}

type Pair struct {
	BaseCurrency         *InstrumentID `protobuf:"bytes,1,opt,name=baseCurrency,proto3" json:"baseCurrency,omitempty"`
	QuoteCurrency        *InstrumentID `protobuf:"bytes,2,opt,name=quoteCurrency,proto3" json:"quoteCurrency,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Pair) Reset()         { *m = Pair{} }
func (m *Pair) String() string { return proto.CompactTextString(m) }
func (*Pair) ProtoMessage()    {}
func (*Pair) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa8c397fe3f70398, []int{1}
}

func (m *Pair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pair.Unmarshal(m, b)
}
func (m *Pair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pair.Marshal(b, m, deterministic)
}
func (m *Pair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pair.Merge(m, src)
}
func (m *Pair) XXX_Size() int {
	return xxx_messageInfo_Pair.Size(m)
}
func (m *Pair) XXX_DiscardUnknown() {
	xxx_messageInfo_Pair.DiscardUnknown(m)
}

var xxx_messageInfo_Pair proto.InternalMessageInfo

func (m *Pair) GetBaseCurrency() *InstrumentID {
	if m != nil {
		return m.BaseCurrency
	}
	return nil
}

func (m *Pair) GetQuoteCurrency() *InstrumentID {
	if m != nil {
		return m.QuoteCurrency
	}
	return nil
}

type SubQuote struct {
	Pair                 *Pair    `protobuf:"bytes,1,opt,name=pair,proto3" json:"pair,omitempty"`
	Bid                  *Price   `protobuf:"bytes,2,opt,name=bid,proto3" json:"bid,omitempty"`
	Ask                  *Price   `protobuf:"bytes,3,opt,name=ask,proto3" json:"ask,omitempty"`
	MinBidQuantity       float64  `protobuf:"fixed64,4,opt,name=minBidQuantity,proto3" json:"minBidQuantity,omitempty"`
	MaxBidQuantity       float64  `protobuf:"fixed64,5,opt,name=maxBidQuantity,proto3" json:"maxBidQuantity,omitempty"`
	MinAskQuantity       float64  `protobuf:"fixed64,6,opt,name=minAskQuantity,proto3" json:"minAskQuantity,omitempty"`
	MaxAskQuantity       float64  `protobuf:"fixed64,7,opt,name=maxAskQuantity,proto3" json:"maxAskQuantity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubQuote) Reset()         { *m = SubQuote{} }
func (m *SubQuote) String() string { return proto.CompactTextString(m) }
func (*SubQuote) ProtoMessage()    {}
func (*SubQuote) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa8c397fe3f70398, []int{2}
}

func (m *SubQuote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubQuote.Unmarshal(m, b)
}
func (m *SubQuote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubQuote.Marshal(b, m, deterministic)
}
func (m *SubQuote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubQuote.Merge(m, src)
}
func (m *SubQuote) XXX_Size() int {
	return xxx_messageInfo_SubQuote.Size(m)
}
func (m *SubQuote) XXX_DiscardUnknown() {
	xxx_messageInfo_SubQuote.DiscardUnknown(m)
}

var xxx_messageInfo_SubQuote proto.InternalMessageInfo

func (m *SubQuote) GetPair() *Pair {
	if m != nil {
		return m.Pair
	}
	return nil
}

func (m *SubQuote) GetBid() *Price {
	if m != nil {
		return m.Bid
	}
	return nil
}

func (m *SubQuote) GetAsk() *Price {
	if m != nil {
		return m.Ask
	}
	return nil
}

func (m *SubQuote) GetMinBidQuantity() float64 {
	if m != nil {
		return m.MinBidQuantity
	}
	return 0
}

func (m *SubQuote) GetMaxBidQuantity() float64 {
	if m != nil {
		return m.MaxBidQuantity
	}
	return 0
}

func (m *SubQuote) GetMinAskQuantity() float64 {
	if m != nil {
		return m.MinAskQuantity
	}
	return 0
}

func (m *SubQuote) GetMaxAskQuantity() float64 {
	if m != nil {
		return m.MaxAskQuantity
	}
	return 0
}

type BaseSubQuote struct {
	Quote                *SubQuote `protobuf:"bytes,1,opt,name=quote,proto3" json:"quote,omitempty"`
	Nav                  *Price    `protobuf:"bytes,2,opt,name=nav,proto3" json:"nav,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *BaseSubQuote) Reset()         { *m = BaseSubQuote{} }
func (m *BaseSubQuote) String() string { return proto.CompactTextString(m) }
func (*BaseSubQuote) ProtoMessage()    {}
func (*BaseSubQuote) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa8c397fe3f70398, []int{3}
}

func (m *BaseSubQuote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseSubQuote.Unmarshal(m, b)
}
func (m *BaseSubQuote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseSubQuote.Marshal(b, m, deterministic)
}
func (m *BaseSubQuote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseSubQuote.Merge(m, src)
}
func (m *BaseSubQuote) XXX_Size() int {
	return xxx_messageInfo_BaseSubQuote.Size(m)
}
func (m *BaseSubQuote) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseSubQuote.DiscardUnknown(m)
}

var xxx_messageInfo_BaseSubQuote proto.InternalMessageInfo

func (m *BaseSubQuote) GetQuote() *SubQuote {
	if m != nil {
		return m.Quote
	}
	return nil
}

func (m *BaseSubQuote) GetNav() *Price {
	if m != nil {
		return m.Nav
	}
	return nil
}

type BaseQuote struct {
	CreatedAt            *UtcMicroTime   `protobuf:"bytes,1,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	AtBlockNo            uint64          `protobuf:"varint,2,opt,name=atBlockNo,proto3" json:"atBlockNo,omitempty"`
	SessionId            uint64          `protobuf:"varint,3,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Sequence             uint64          `protobuf:"varint,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Flags                []string        `protobuf:"bytes,5,rep,name=flags,proto3" json:"flags,omitempty"`
	SubQuotes            []*BaseSubQuote `protobuf:"bytes,6,rep,name=subQuotes,proto3" json:"subQuotes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *BaseQuote) Reset()         { *m = BaseQuote{} }
func (m *BaseQuote) String() string { return proto.CompactTextString(m) }
func (*BaseQuote) ProtoMessage()    {}
func (*BaseQuote) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa8c397fe3f70398, []int{4}
}

func (m *BaseQuote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseQuote.Unmarshal(m, b)
}
func (m *BaseQuote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseQuote.Marshal(b, m, deterministic)
}
func (m *BaseQuote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseQuote.Merge(m, src)
}
func (m *BaseQuote) XXX_Size() int {
	return xxx_messageInfo_BaseQuote.Size(m)
}
func (m *BaseQuote) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseQuote.DiscardUnknown(m)
}

var xxx_messageInfo_BaseQuote proto.InternalMessageInfo

func (m *BaseQuote) GetCreatedAt() *UtcMicroTime {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *BaseQuote) GetAtBlockNo() uint64 {
	if m != nil {
		return m.AtBlockNo
	}
	return 0
}

func (m *BaseQuote) GetSessionId() uint64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *BaseQuote) GetSequence() uint64 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *BaseQuote) GetFlags() []string {
	if m != nil {
		return m.Flags
	}
	return nil
}

func (m *BaseQuote) GetSubQuotes() []*BaseSubQuote {
	if m != nil {
		return m.SubQuotes
	}
	return nil
}

type SignedBaseQuote struct {
	Signature            *Signature `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Wrapped              *BaseQuote `protobuf:"bytes,2,opt,name=wrapped,proto3" json:"wrapped,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SignedBaseQuote) Reset()         { *m = SignedBaseQuote{} }
func (m *SignedBaseQuote) String() string { return proto.CompactTextString(m) }
func (*SignedBaseQuote) ProtoMessage()    {}
func (*SignedBaseQuote) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa8c397fe3f70398, []int{5}
}

func (m *SignedBaseQuote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedBaseQuote.Unmarshal(m, b)
}
func (m *SignedBaseQuote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedBaseQuote.Marshal(b, m, deterministic)
}
func (m *SignedBaseQuote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedBaseQuote.Merge(m, src)
}
func (m *SignedBaseQuote) XXX_Size() int {
	return xxx_messageInfo_SignedBaseQuote.Size(m)
}
func (m *SignedBaseQuote) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedBaseQuote.DiscardUnknown(m)
}

var xxx_messageInfo_SignedBaseQuote proto.InternalMessageInfo

func (m *SignedBaseQuote) GetSignature() *Signature {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *SignedBaseQuote) GetWrapped() *BaseQuote {
	if m != nil {
		return m.Wrapped
	}
	return nil
}

type UserQuote struct {
	Tier                 string           `protobuf:"bytes,1,opt,name=tier,proto3" json:"tier,omitempty"`
	SignedBaseQuote      *SignedBaseQuote `protobuf:"bytes,2,opt,name=signedBaseQuote,proto3" json:"signedBaseQuote,omitempty"`
	SubQuotes            []*SubQuote      `protobuf:"bytes,3,rep,name=subQuotes,proto3" json:"subQuotes,omitempty"`
	QuoteId              string           `protobuf:"bytes,4,opt,name=quoteId,proto3" json:"quoteId,omitempty"`
	CreatedAt            *UtcMicroTime    `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UserQuote) Reset()         { *m = UserQuote{} }
func (m *UserQuote) String() string { return proto.CompactTextString(m) }
func (*UserQuote) ProtoMessage()    {}
func (*UserQuote) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa8c397fe3f70398, []int{6}
}

func (m *UserQuote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserQuote.Unmarshal(m, b)
}
func (m *UserQuote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserQuote.Marshal(b, m, deterministic)
}
func (m *UserQuote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserQuote.Merge(m, src)
}
func (m *UserQuote) XXX_Size() int {
	return xxx_messageInfo_UserQuote.Size(m)
}
func (m *UserQuote) XXX_DiscardUnknown() {
	xxx_messageInfo_UserQuote.DiscardUnknown(m)
}

var xxx_messageInfo_UserQuote proto.InternalMessageInfo

func (m *UserQuote) GetTier() string {
	if m != nil {
		return m.Tier
	}
	return ""
}

func (m *UserQuote) GetSignedBaseQuote() *SignedBaseQuote {
	if m != nil {
		return m.SignedBaseQuote
	}
	return nil
}

func (m *UserQuote) GetSubQuotes() []*SubQuote {
	if m != nil {
		return m.SubQuotes
	}
	return nil
}

func (m *UserQuote) GetQuoteId() string {
	if m != nil {
		return m.QuoteId
	}
	return ""
}

func (m *UserQuote) GetCreatedAt() *UtcMicroTime {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type SignedUserQuote struct {
	Signature            *Signature `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Wrapped              *UserQuote `protobuf:"bytes,2,opt,name=wrapped,proto3" json:"wrapped,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SignedUserQuote) Reset()         { *m = SignedUserQuote{} }
func (m *SignedUserQuote) String() string { return proto.CompactTextString(m) }
func (*SignedUserQuote) ProtoMessage()    {}
func (*SignedUserQuote) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa8c397fe3f70398, []int{7}
}

func (m *SignedUserQuote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedUserQuote.Unmarshal(m, b)
}
func (m *SignedUserQuote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedUserQuote.Marshal(b, m, deterministic)
}
func (m *SignedUserQuote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedUserQuote.Merge(m, src)
}
func (m *SignedUserQuote) XXX_Size() int {
	return xxx_messageInfo_SignedUserQuote.Size(m)
}
func (m *SignedUserQuote) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedUserQuote.DiscardUnknown(m)
}

var xxx_messageInfo_SignedUserQuote proto.InternalMessageInfo

func (m *SignedUserQuote) GetSignature() *Signature {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *SignedUserQuote) GetWrapped() *UserQuote {
	if m != nil {
		return m.Wrapped
	}
	return nil
}

type CommitmentRecord struct {
	Instrument           *InstrumentID    `protobuf:"bytes,1,opt,name=Instrument,proto3" json:"Instrument,omitempty"`
	OrderType            string           `protobuf:"bytes,2,opt,name=OrderType,proto3" json:"OrderType,omitempty"`
	Quantity             float64          `protobuf:"fixed64,3,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
	Quote                *SignedUserQuote `protobuf:"bytes,4,opt,name=Quote,proto3" json:"Quote,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CommitmentRecord) Reset()         { *m = CommitmentRecord{} }
func (m *CommitmentRecord) String() string { return proto.CompactTextString(m) }
func (*CommitmentRecord) ProtoMessage()    {}
func (*CommitmentRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa8c397fe3f70398, []int{8}
}

func (m *CommitmentRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitmentRecord.Unmarshal(m, b)
}
func (m *CommitmentRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitmentRecord.Marshal(b, m, deterministic)
}
func (m *CommitmentRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitmentRecord.Merge(m, src)
}
func (m *CommitmentRecord) XXX_Size() int {
	return xxx_messageInfo_CommitmentRecord.Size(m)
}
func (m *CommitmentRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitmentRecord.DiscardUnknown(m)
}

var xxx_messageInfo_CommitmentRecord proto.InternalMessageInfo

func (m *CommitmentRecord) GetInstrument() *InstrumentID {
	if m != nil {
		return m.Instrument
	}
	return nil
}

func (m *CommitmentRecord) GetOrderType() string {
	if m != nil {
		return m.OrderType
	}
	return ""
}

func (m *CommitmentRecord) GetQuantity() float64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *CommitmentRecord) GetQuote() *SignedUserQuote {
	if m != nil {
		return m.Quote
	}
	return nil
}

type CommitRequest struct {
	Commitment           *CommitmentRecord `protobuf:"bytes,1,opt,name=Commitment,proto3" json:"Commitment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CommitRequest) Reset()         { *m = CommitRequest{} }
func (m *CommitRequest) String() string { return proto.CompactTextString(m) }
func (*CommitRequest) ProtoMessage()    {}
func (*CommitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa8c397fe3f70398, []int{9}
}

func (m *CommitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitRequest.Unmarshal(m, b)
}
func (m *CommitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitRequest.Marshal(b, m, deterministic)
}
func (m *CommitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitRequest.Merge(m, src)
}
func (m *CommitRequest) XXX_Size() int {
	return xxx_messageInfo_CommitRequest.Size(m)
}
func (m *CommitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommitRequest proto.InternalMessageInfo

func (m *CommitRequest) GetCommitment() *CommitmentRecord {
	if m != nil {
		return m.Commitment
	}
	return nil
}

type PartialResponse struct {
	Expiry               []byte              `protobuf:"bytes,1,opt,name=Expiry,proto3" json:"Expiry,omitempty"`
	Session              uint32              `protobuf:"varint,2,opt,name=Session,proto3" json:"Session,omitempty"`
	Sequence             uint32              `protobuf:"varint,3,opt,name=Sequence,proto3" json:"Sequence,omitempty"`
	Commitment           []*CommitmentRecord `protobuf:"bytes,4,rep,name=Commitment,proto3" json:"Commitment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PartialResponse) Reset()         { *m = PartialResponse{} }
func (m *PartialResponse) String() string { return proto.CompactTextString(m) }
func (*PartialResponse) ProtoMessage()    {}
func (*PartialResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa8c397fe3f70398, []int{10}
}

func (m *PartialResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartialResponse.Unmarshal(m, b)
}
func (m *PartialResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartialResponse.Marshal(b, m, deterministic)
}
func (m *PartialResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartialResponse.Merge(m, src)
}
func (m *PartialResponse) XXX_Size() int {
	return xxx_messageInfo_PartialResponse.Size(m)
}
func (m *PartialResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PartialResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PartialResponse proto.InternalMessageInfo

func (m *PartialResponse) GetExpiry() []byte {
	if m != nil {
		return m.Expiry
	}
	return nil
}

func (m *PartialResponse) GetSession() uint32 {
	if m != nil {
		return m.Session
	}
	return 0
}

func (m *PartialResponse) GetSequence() uint32 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *PartialResponse) GetCommitment() []*CommitmentRecord {
	if m != nil {
		return m.Commitment
	}
	return nil
}

type ImmediateCommitRequest struct {
	SourceAccount        *Address          `protobuf:"bytes,1,opt,name=SourceAccount,proto3" json:"SourceAccount,omitempty"`
	DestinationAccount   *Address          `protobuf:"bytes,2,opt,name=DestinationAccount,proto3" json:"DestinationAccount,omitempty"`
	Commitment           *CommitmentRecord `protobuf:"bytes,3,opt,name=Commitment,proto3" json:"Commitment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ImmediateCommitRequest) Reset()         { *m = ImmediateCommitRequest{} }
func (m *ImmediateCommitRequest) String() string { return proto.CompactTextString(m) }
func (*ImmediateCommitRequest) ProtoMessage()    {}
func (*ImmediateCommitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa8c397fe3f70398, []int{11}
}

func (m *ImmediateCommitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImmediateCommitRequest.Unmarshal(m, b)
}
func (m *ImmediateCommitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImmediateCommitRequest.Marshal(b, m, deterministic)
}
func (m *ImmediateCommitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImmediateCommitRequest.Merge(m, src)
}
func (m *ImmediateCommitRequest) XXX_Size() int {
	return xxx_messageInfo_ImmediateCommitRequest.Size(m)
}
func (m *ImmediateCommitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImmediateCommitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImmediateCommitRequest proto.InternalMessageInfo

func (m *ImmediateCommitRequest) GetSourceAccount() *Address {
	if m != nil {
		return m.SourceAccount
	}
	return nil
}

func (m *ImmediateCommitRequest) GetDestinationAccount() *Address {
	if m != nil {
		return m.DestinationAccount
	}
	return nil
}

func (m *ImmediateCommitRequest) GetCommitment() *CommitmentRecord {
	if m != nil {
		return m.Commitment
	}
	return nil
}

type FinalCommitResponse struct {
	Signature            *Signature `protobuf:"bytes,1,opt,name=Signature,proto3" json:"Signature,omitempty"`
	XNonce               []byte     `protobuf:"bytes,2,opt,name=_nonce,json=Nonce,proto3" json:"_nonce,omitempty"`
	XFeeDestination      string     `protobuf:"bytes,3,opt,name=_feeDestination,json=FeeDestination,proto3" json:"_feeDestination,omitempty"`
	XExpirationDate      []byte     `protobuf:"bytes,4,opt,name=_expirationDate,json=ExpirationDate,proto3" json:"_expirationDate,omitempty"`
	XExpirationBlock     []byte     `protobuf:"bytes,5,opt,name=_expirationBlock,json=ExpirationBlock,proto3" json:"_expirationBlock,omitempty"`
	XSource              string     `protobuf:"bytes,6,opt,name=_source,json=Source,proto3" json:"_source,omitempty"`
	XDestination         string     `protobuf:"bytes,7,opt,name=_destination,json=Destination,proto3" json:"_destination,omitempty"`
	XInstrument          string     `protobuf:"bytes,8,opt,name=_instrument,json=Instrument,proto3" json:"_instrument,omitempty"`
	XInstrumentQuantity  []byte     `protobuf:"bytes,9,opt,name=_instrumentQuantity,json=InstrumentQuantity,proto3" json:"_instrumentQuantity,omitempty"`
	XInstrumentOperation uint32     `protobuf:"varint,10,opt,name=_instrumentOperation,json=InstrumentOperation,proto3" json:"_instrumentOperation,omitempty"`
	XNeutralQuantity     []byte     `protobuf:"bytes,11,opt,name=_neutralQuantity,json=NeutralQuantity,proto3" json:"_neutralQuantity,omitempty"`
	XFee                 []byte     `protobuf:"bytes,12,opt,name=_fee,json=Fee,proto3" json:"_fee,omitempty"`
	XNeutralBoundary     []byte     `protobuf:"bytes,13,opt,name=_neutralBoundary,json=NeutralBoundary,proto3" json:"_neutralBoundary,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *FinalCommitResponse) Reset()         { *m = FinalCommitResponse{} }
func (m *FinalCommitResponse) String() string { return proto.CompactTextString(m) }
func (*FinalCommitResponse) ProtoMessage()    {}
func (*FinalCommitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa8c397fe3f70398, []int{12}
}

func (m *FinalCommitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FinalCommitResponse.Unmarshal(m, b)
}
func (m *FinalCommitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FinalCommitResponse.Marshal(b, m, deterministic)
}
func (m *FinalCommitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FinalCommitResponse.Merge(m, src)
}
func (m *FinalCommitResponse) XXX_Size() int {
	return xxx_messageInfo_FinalCommitResponse.Size(m)
}
func (m *FinalCommitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FinalCommitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FinalCommitResponse proto.InternalMessageInfo

func (m *FinalCommitResponse) GetSignature() *Signature {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *FinalCommitResponse) GetXNonce() []byte {
	if m != nil {
		return m.XNonce
	}
	return nil
}

func (m *FinalCommitResponse) GetXFeeDestination() string {
	if m != nil {
		return m.XFeeDestination
	}
	return ""
}

func (m *FinalCommitResponse) GetXExpirationDate() []byte {
	if m != nil {
		return m.XExpirationDate
	}
	return nil
}

func (m *FinalCommitResponse) GetXExpirationBlock() []byte {
	if m != nil {
		return m.XExpirationBlock
	}
	return nil
}

func (m *FinalCommitResponse) GetXSource() string {
	if m != nil {
		return m.XSource
	}
	return ""
}

func (m *FinalCommitResponse) GetXDestination() string {
	if m != nil {
		return m.XDestination
	}
	return ""
}

func (m *FinalCommitResponse) GetXInstrument() string {
	if m != nil {
		return m.XInstrument
	}
	return ""
}

func (m *FinalCommitResponse) GetXInstrumentQuantity() []byte {
	if m != nil {
		return m.XInstrumentQuantity
	}
	return nil
}

func (m *FinalCommitResponse) GetXInstrumentOperation() uint32 {
	if m != nil {
		return m.XInstrumentOperation
	}
	return 0
}

func (m *FinalCommitResponse) GetXNeutralQuantity() []byte {
	if m != nil {
		return m.XNeutralQuantity
	}
	return nil
}

func (m *FinalCommitResponse) GetXFee() []byte {
	if m != nil {
		return m.XFee
	}
	return nil
}

func (m *FinalCommitResponse) GetXNeutralBoundary() []byte {
	if m != nil {
		return m.XNeutralBoundary
	}
	return nil
}

type SignedFinalCommitResponse struct {
	Signature            *Signature           `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Wrapped              *FinalCommitResponse `protobuf:"bytes,2,opt,name=wrapped,proto3" json:"wrapped,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SignedFinalCommitResponse) Reset()         { *m = SignedFinalCommitResponse{} }
func (m *SignedFinalCommitResponse) String() string { return proto.CompactTextString(m) }
func (*SignedFinalCommitResponse) ProtoMessage()    {}
func (*SignedFinalCommitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa8c397fe3f70398, []int{13}
}

func (m *SignedFinalCommitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedFinalCommitResponse.Unmarshal(m, b)
}
func (m *SignedFinalCommitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedFinalCommitResponse.Marshal(b, m, deterministic)
}
func (m *SignedFinalCommitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedFinalCommitResponse.Merge(m, src)
}
func (m *SignedFinalCommitResponse) XXX_Size() int {
	return xxx_messageInfo_SignedFinalCommitResponse.Size(m)
}
func (m *SignedFinalCommitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedFinalCommitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SignedFinalCommitResponse proto.InternalMessageInfo

func (m *SignedFinalCommitResponse) GetSignature() *Signature {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *SignedFinalCommitResponse) GetWrapped() *FinalCommitResponse {
	if m != nil {
		return m.Wrapped
	}
	return nil
}

func init() {
	proto.RegisterType((*SubscribeRequest)(nil), "neutralservice.SubscribeRequest")
	proto.RegisterType((*Pair)(nil), "neutralservice.Pair")
	proto.RegisterType((*SubQuote)(nil), "neutralservice.SubQuote")
	proto.RegisterType((*BaseSubQuote)(nil), "neutralservice.BaseSubQuote")
	proto.RegisterType((*BaseQuote)(nil), "neutralservice.BaseQuote")
	proto.RegisterType((*SignedBaseQuote)(nil), "neutralservice.SignedBaseQuote")
	proto.RegisterType((*UserQuote)(nil), "neutralservice.UserQuote")
	proto.RegisterType((*SignedUserQuote)(nil), "neutralservice.SignedUserQuote")
	proto.RegisterType((*CommitmentRecord)(nil), "neutralservice.CommitmentRecord")
	proto.RegisterType((*CommitRequest)(nil), "neutralservice.CommitRequest")
	proto.RegisterType((*PartialResponse)(nil), "neutralservice.PartialResponse")
	proto.RegisterType((*ImmediateCommitRequest)(nil), "neutralservice.ImmediateCommitRequest")
	proto.RegisterType((*FinalCommitResponse)(nil), "neutralservice.FinalCommitResponse")
	proto.RegisterType((*SignedFinalCommitResponse)(nil), "neutralservice.SignedFinalCommitResponse")
}

func init() { proto.RegisterFile("quotes.proto", fileDescriptor_aa8c397fe3f70398) }

var fileDescriptor_aa8c397fe3f70398 = []byte{
	// 992 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xcd, 0x6e, 0x1b, 0x37,
	0x10, 0xc6, 0x5a, 0x2b, 0xd9, 0x3b, 0x96, 0x7f, 0x4a, 0x3b, 0xc9, 0x3a, 0x08, 0x10, 0x75, 0x03,
	0x34, 0xee, 0x45, 0x45, 0x6b, 0xb4, 0x01, 0x8a, 0x06, 0x88, 0x15, 0xdb, 0x85, 0x0e, 0x75, 0x64,
	0x2a, 0x39, 0x0b, 0xd4, 0x2e, 0x63, 0xb0, 0xd6, 0x92, 0x1b, 0x92, 0xeb, 0xc6, 0xa7, 0xbe, 0x40,
	0x6e, 0x7d, 0x82, 0x5e, 0xfa, 0x1e, 0x7d, 0x95, 0xbe, 0x41, 0x6f, 0x3d, 0x16, 0xe4, 0xfe, 0xaf,
	0x65, 0x37, 0x0e, 0xd0, 0x9b, 0x66, 0xf8, 0xcd, 0x70, 0xbe, 0x6f, 0x86, 0xa3, 0x85, 0xfe, 0xbb,
	0x54, 0x68, 0xaa, 0x86, 0x89, 0x14, 0x5a, 0xa0, 0x4d, 0x4e, 0x53, 0x2d, 0xc9, 0x42, 0x51, 0x79,
	0xc9, 0x42, 0xfa, 0xb0, 0x1f, 0x8a, 0x38, 0x16, 0x3c, 0x3b, 0x0d, 0x26, 0xb0, 0x3d, 0x4d, 0xe7,
	0x2a, 0x94, 0x6c, 0x4e, 0x31, 0x7d, 0x97, 0x52, 0xa5, 0xd1, 0x0f, 0x00, 0x8c, 0x2b, 0x2d, 0xd3,
	0x98, 0x72, 0xed, 0x3b, 0x03, 0x67, 0x7f, 0xfd, 0x9b, 0x47, 0xc3, 0x66, 0x9a, 0xe1, 0xb8, 0x44,
	0x8c, 0x8f, 0x70, 0x0d, 0x1f, 0x7c, 0x70, 0xc0, 0x9d, 0x10, 0x26, 0xd1, 0x0b, 0xe8, 0xcf, 0x89,
	0xa2, 0x2f, 0x53, 0x29, 0x29, 0x0f, 0xaf, 0x3e, 0x2a, 0x51, 0x23, 0x02, 0x8d, 0x60, 0xc3, 0x52,
	0x29, 0x53, 0xac, 0x7c, 0x44, 0x8a, 0x66, 0x48, 0xf0, 0xc7, 0x0a, 0xac, 0x4d, 0xd3, 0xf9, 0x99,
	0x71, 0xa2, 0x7d, 0x70, 0x13, 0xc2, 0x64, 0x5e, 0xca, 0x6e, 0x3b, 0x8f, 0x29, 0x1b, 0x5b, 0x04,
	0x7a, 0x0a, 0x9d, 0x39, 0x8b, 0xf2, 0x0b, 0xef, 0x5d, 0x03, 0x4a, 0x16, 0x52, 0x6c, 0x10, 0x06,
	0x48, 0xd4, 0x85, 0xdf, 0xb9, 0x15, 0x48, 0xd4, 0x05, 0xfa, 0x02, 0x36, 0x63, 0xc6, 0x47, 0x2c,
	0x3a, 0x4b, 0x09, 0xd7, 0x4c, 0x5f, 0xf9, 0xee, 0xc0, 0xd9, 0x77, 0x70, 0xcb, 0x6b, 0x71, 0xe4,
	0x7d, 0x1d, 0xd7, 0xcd, 0x71, 0x0d, 0x6f, 0x9e, 0xef, 0x50, 0x5d, 0x94, 0xb8, 0x5e, 0x99, 0xaf,
	0xe6, 0xcd, 0xf3, 0xd5, 0x71, 0xab, 0x65, 0xbe, 0x9a, 0x37, 0x38, 0x87, 0xfe, 0x88, 0x28, 0x5a,
	0x6a, 0x35, 0x84, 0xae, 0x55, 0x32, 0x17, 0xcb, 0x6f, 0x53, 0x2b, 0x80, 0x38, 0x83, 0x19, 0x21,
	0x38, 0xb9, 0xfc, 0x0f, 0xc5, 0x38, 0xb9, 0x0c, 0xfe, 0x76, 0xc0, 0x33, 0x37, 0x65, 0xd7, 0x7c,
	0x0f, 0x5e, 0x28, 0x29, 0xd1, 0x34, 0x3a, 0xbc, 0x71, 0xd6, 0xde, 0xe8, 0xf0, 0x27, 0x16, 0x4a,
	0xf1, 0x9a, 0xc5, 0x14, 0x57, 0x70, 0xf4, 0x08, 0x3c, 0xa2, 0x47, 0x0b, 0x11, 0x5e, 0x9c, 0x0a,
	0x7b, 0xb1, 0x8b, 0x2b, 0x87, 0x39, 0x55, 0x54, 0x29, 0x26, 0xf8, 0x38, 0xb2, 0xfd, 0x71, 0x71,
	0xe5, 0x40, 0x0f, 0x61, 0x4d, 0x99, 0x79, 0xe7, 0x21, 0xb5, 0x8d, 0x70, 0x71, 0x69, 0xa3, 0x5d,
	0xe8, 0xbe, 0x5d, 0x90, 0x73, 0xe5, 0x77, 0x07, 0x9d, 0x7d, 0x0f, 0x67, 0x86, 0xa9, 0x54, 0xe5,
	0x9c, 0x95, 0xdf, 0x1b, 0x74, 0x96, 0x55, 0x5a, 0x57, 0x10, 0x57, 0xf0, 0xe0, 0x57, 0xd8, 0x9a,
	0xb2, 0x73, 0x4e, 0xa3, 0x8a, 0xf8, 0x33, 0xf0, 0x14, 0x3b, 0xe7, 0x44, 0xa7, 0xb2, 0xd0, 0x78,
	0xef, 0x9a, 0xc6, 0x05, 0x00, 0x57, 0x58, 0x74, 0x00, 0xab, 0xbf, 0x48, 0x92, 0x24, 0xb4, 0x18,
	0xcf, 0xbd, 0x65, 0x55, 0x64, 0x25, 0x14, 0xc8, 0xe0, 0x1f, 0x07, 0xbc, 0x37, 0x8a, 0xca, 0xec,
	0x6e, 0x04, 0xae, 0x66, 0x34, 0x7b, 0x07, 0x1e, 0xb6, 0xbf, 0xd1, 0x18, 0xb6, 0x54, 0xb3, 0xc4,
	0x3c, 0xfd, 0xe3, 0x65, 0x55, 0xd5, 0x60, 0xb8, 0x1d, 0x87, 0xbe, 0xab, 0x2b, 0xd5, 0xb1, 0x4a,
	0xdd, 0x3c, 0x3e, 0x15, 0x14, 0xf9, 0xb0, 0x6a, 0x67, 0x69, 0x1c, 0xd9, 0x96, 0x78, 0xb8, 0x30,
	0x9b, 0x53, 0xd2, 0xbd, 0xd3, 0x94, 0x54, 0xda, 0x57, 0xfc, 0xff, 0x47, 0xed, 0xcb, 0x4b, 0x2a,
	0xed, 0xff, 0x74, 0x60, 0xfb, 0xa5, 0x88, 0x63, 0xa6, 0xcd, 0x8a, 0xc2, 0x34, 0x14, 0x32, 0x32,
	0x4b, 0x76, 0x7c, 0xc7, 0x25, 0x5b, 0x59, 0x66, 0xb6, 0x5f, 0xc9, 0x88, 0xca, 0xd7, 0x57, 0x49,
	0xd6, 0x26, 0x0f, 0x57, 0x0e, 0x33, 0xdb, 0xe5, 0x63, 0xef, 0xd8, 0xc7, 0x5e, 0xda, 0xe8, 0x5b,
	0xe8, 0x66, 0xcd, 0x75, 0x6f, 0x6b, 0x6e, 0xc5, 0x22, 0x43, 0x07, 0x67, 0xb0, 0x91, 0x51, 0x28,
	0xfe, 0x24, 0x5e, 0x00, 0x54, 0x9c, 0xf2, 0xfa, 0x07, 0xed, 0x64, 0x6d, 0xd6, 0xb8, 0x16, 0x13,
	0xfc, 0xee, 0xc0, 0xd6, 0x84, 0x48, 0xcd, 0xc8, 0x02, 0x53, 0x95, 0x08, 0xae, 0x28, 0xba, 0x0f,
	0xbd, 0xe3, 0xf7, 0x09, 0x93, 0xd9, 0xbf, 0x45, 0x1f, 0xe7, 0x96, 0x99, 0x8c, 0x69, 0xf6, 0x74,
	0x2d, 0xdb, 0x0d, 0x5c, 0x98, 0x86, 0xeb, 0xb4, 0x78, 0xc7, 0x1d, 0x7b, 0x54, 0xda, 0xad, 0x1a,
	0x5d, 0x3b, 0x88, 0x77, 0xab, 0xf1, 0x2f, 0x07, 0xee, 0x8f, 0xe3, 0x98, 0x46, 0x8c, 0x68, 0xda,
	0x14, 0xe0, 0x39, 0x6c, 0x4c, 0x45, 0x2a, 0x43, 0x7a, 0x18, 0x86, 0x22, 0x2d, 0x35, 0x78, 0xd0,
	0xce, 0x7f, 0x18, 0x45, 0x92, 0x2a, 0x85, 0x9b, 0x68, 0xf4, 0x23, 0xa0, 0x23, 0xaa, 0x34, 0xe3,
	0x44, 0x33, 0xc1, 0x8b, 0x1c, 0x2b, 0xb7, 0xe7, 0x58, 0x12, 0xd2, 0x22, 0xd9, 0xf9, 0x84, 0x46,
	0x7c, 0x70, 0x61, 0xe7, 0x84, 0x71, 0xb2, 0x28, 0x08, 0xe6, 0xcd, 0x78, 0x06, 0xde, 0xf4, 0x0e,
	0xaf, 0xa4, 0xfc, 0x89, 0xee, 0x41, 0x6f, 0xc6, 0x85, 0xe9, 0xc8, 0x8a, 0xed, 0x62, 0xf7, 0xd4,
	0x18, 0xe8, 0x29, 0x6c, 0xcd, 0xde, 0x52, 0x5a, 0xe3, 0x60, 0xcb, 0xf5, 0xf0, 0xe6, 0x49, 0xc3,
	0x6b, 0x81, 0xd4, 0x34, 0xde, 0x9a, 0x47, 0x24, 0x9f, 0xd6, 0x3e, 0xde, 0x3c, 0x6e, 0x78, 0xd1,
	0x97, 0xb0, 0x5d, 0x03, 0xda, 0xc5, 0x6f, 0xb7, 0x43, 0x1f, 0x6f, 0x1d, 0x37, 0xdd, 0xe8, 0x01,
	0xac, 0xce, 0x94, 0xed, 0x80, 0xfd, 0x9f, 0xf4, 0x70, 0x2f, 0xeb, 0x07, 0xfa, 0x1c, 0xfa, 0xb3,
	0xa8, 0x56, 0xd2, 0xaa, 0x3d, 0x5d, 0xaf, 0xd7, 0xf3, 0x18, 0xd6, 0x67, 0xb5, 0x2f, 0xa2, 0x35,
	0x8b, 0xa8, 0x3f, 0xc7, 0xaf, 0x60, 0xa7, 0x06, 0x28, 0xdf, 0x9e, 0x67, 0x4b, 0x41, 0xe3, 0x6b,
	0x27, 0xe8, 0x6b, 0xd8, 0xad, 0x05, 0xbc, 0x4a, 0x68, 0x56, 0xaa, 0x0f, 0x76, 0x82, 0x77, 0xc6,
	0xd7, 0x8f, 0x2c, 0xd7, 0x5c, 0xfc, 0xf2, 0x82, 0xf5, 0x8c, 0xeb, 0x69, 0xd3, 0x8d, 0x3e, 0x03,
	0xd7, 0x08, 0xed, 0xf7, 0xed, 0x71, 0xe7, 0x84, 0xd2, 0x7a, 0xf4, 0x48, 0xa4, 0x3c, 0x22, 0xf2,
	0xca, 0xdf, 0x68, 0x44, 0x17, 0xee, 0xe0, 0x37, 0x07, 0xf6, 0xb2, 0x2d, 0x70, 0xc3, 0x50, 0x7c,
	0xda, 0xea, 0x7c, 0xde, 0x5e, 0x9d, 0x4f, 0xda, 0x61, 0x4b, 0xae, 0x2b, 0x97, 0xe8, 0xe8, 0x00,
	0x9e, 0x84, 0x22, 0x2e, 0x42, 0x12, 0x29, 0x7e, 0xa6, 0xa1, 0x1e, 0x2e, 0xd8, 0x7c, 0x98, 0x87,
	0xab, 0xa1, 0x4c, 0xc2, 0x11, 0xd8, 0x75, 0x35, 0x31, 0xdf, 0xb6, 0x13, 0x67, 0xde, 0xb3, 0x1f,
	0xb9, 0x07, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xc2, 0xf0, 0xbb, 0x3b, 0x12, 0x0b, 0x00, 0x00,
}
